{"hierarchy":{"paths":[["doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments"]]},"abstract":[{"type":"text","text":"Deployments offer a few configurable parameters with certain defaults."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments\/post","interfaceLanguage":"openapi"},"topicSections":[{"anchor":"Structures","generated":true,"title":"Structures","identifiers":["doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_orgs__org__personal-access-token-requests\/post\/202","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments\/post\/409","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__pulls\/post\/201","doc:\/\/com.example.petstore\/documentation\/Swagger-Petstore---OpenAPI-3.0\/_pet\/post\/422"]}],"variants":[{"paths":["\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments\/post"],"traits":[{"interfaceLanguage":"openapi"}]}],"sections":[],"metadata":{"navigatorTitle":[{"text":"POST \/repos\/{owner}\/{repo}\/deployments","kind":"text"}],"externalID":"operation:post:\/repos\/{owner}\/{repo}\/deployments","modules":[{"name":"GitHub v3 REST API"}],"role":"symbol","title":"Create a deployment","fragments":[{"kind":"text","text":"POST"}],"roleHeading":"HTTP POST","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"ref","type":"codeVoice"},{"text":" parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them","type":"text"},{"text":" ","type":"text"},{"text":"before we merge a pull request.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"code":"environment","type":"codeVoice"},{"type":"text","text":" parameter allows deployments to be issued to different runtime environments. Teams often have"},{"type":"text","text":" "},{"type":"text","text":"multiple environments for verifying their applications, such as "},{"code":"production","type":"codeVoice"},{"type":"text","text":", "},{"code":"staging","type":"codeVoice"},{"type":"text","text":", and "},{"code":"qa","type":"codeVoice"},{"type":"text","text":". This parameter"},{"type":"text","text":" "},{"type":"text","text":"makes it easier to track which environments have requested deployments. The default environment is "},{"code":"production","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"auto_merge"},{"type":"text","text":" parameter is used to ensure that the requested ref is not behind the repository’s default branch. If"},{"type":"text","text":" "},{"type":"text","text":"the ref "},{"type":"emphasis","inlineContent":[{"text":"is","type":"text"}]},{"type":"text","text":" behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,"},{"type":"text","text":" "},{"type":"text","text":"the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will"},{"type":"text","text":" "},{"type":"text","text":"return a failure response."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"By default, "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.github.com\/rest\/commits\/statuses"},{"type":"text","text":" for every submitted context must be in a "},{"type":"codeVoice","code":"success"},{"type":"text","text":" "},{"type":"text","text":"state. The "},{"type":"codeVoice","code":"required_contexts"},{"type":"text","text":" parameter allows you to specify a subset of contexts that must be "},{"type":"codeVoice","code":"success"},{"type":"text","text":", or to"},{"type":"text","text":" "},{"type":"text","text":"specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do"},{"type":"text","text":" "},{"type":"text","text":"not require any contexts or create any commit statuses, the deployment will always succeed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"payload","type":"codeVoice"},{"text":" parameter is available for any extra information that a deployment system might need. It is a JSON text","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"field that will be passed on when a deployment event is dispatched."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"task","type":"codeVoice"},{"type":"text","text":" parameter is used by the deployment system to allow different execution paths. In the web world this might"},{"type":"text","text":" "},{"type":"text","text":"be "},{"code":"deploy:migrations","type":"codeVoice"},{"type":"text","text":" to run schema changes on the system. In the compiled world this could be a flag to compile an"},{"type":"text","text":" "},{"type":"text","text":"application with debugging enabled."}]},{"type":"paragraph","inlineContent":[{"text":"Merged branch response:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating"},{"type":"text","text":" "},{"type":"text","text":"a deployment. This auto-merge happens when:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Auto-merge option is enabled in the repository","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Topic branch does not include the latest changes on the base branch, which is ","type":"text"},{"type":"codeVoice","code":"master"},{"text":" in the response example","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"There are no merge conflicts","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If there are no new commits in the base branch, a new request to create a deployment should give a successful"},{"type":"text","text":" "},{"type":"text","text":"response."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Merge conflict response:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This error happens when the "},{"type":"codeVoice","code":"auto_merge"},{"type":"text","text":" option is enabled and when the default branch (in this case "},{"type":"codeVoice","code":"master"},{"type":"text","text":"), can’t"},{"type":"text","text":" "},{"type":"text","text":"be merged into the branch that’s being deployed (in this case "},{"type":"codeVoice","code":"topic-branch"},{"type":"text","text":"), due to merge conflicts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Failed commit status checks:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This error happens when the "},{"type":"codeVoice","code":"required_contexts"},{"type":"text","text":" parameter indicates that one or more contexts need to have a "},{"type":"codeVoice","code":"success"},{"type":"text","text":" "},{"type":"text","text":"status for the commit to be deployed, but one or more of the required contexts do not have a state of "},{"type":"codeVoice","code":"success"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"OAuth app tokens and personal access tokens (classic) need the ","type":"text"},{"code":"repo","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"repo_deployment","type":"codeVoice"},{"text":" scope to use this endpoint.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Parameters:"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"owner"},{"type":"text","text":" (path, Required):"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"repo"},{"type":"text","text":" (path, Required):"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Request Body:"}]},{"text":" ","type":"text"},{"text":"Content Type: ","type":"text"},{"code":"application\/json","type":"codeVoice"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Responses:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"422"},{"type":"text","text":": Referenced response"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"202","type":"codeVoice"},{"text":": Merged branch response","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"409"},{"type":"text","text":": Conflict when there is a merge conflict or the commit’s status checks failed"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"201","type":"codeVoice"},{"type":"text","text":": Response"}]}]}]}]}],"references":{"doc://com.example.petstore/documentation/GitHub-v3-REST-API":{"url":"\/documentation\/github-v3-rest-api","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API","title":"GitHub v3 REST API","kind":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_orgs__org__personal-access-token-requests/post/202":{"type":"topic","navigatorTitle":[{"kind":"text","text":"202 Response"}],"role":"symbol","url":"\/documentation\/github-v3-rest-api\/_orgs__org__personal-access-token-requests\/post\/202","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_orgs__org__personal-access-token-requests\/post\/202","title":"202 Response","required":true,"abstract":[{"type":"text","text":"Referenced response"}],"kind":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__deployments/post":{"navigatorTitle":[{"text":"POST \/repos\/{owner}\/{repo}\/deployments","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments\/post","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Deployments offer a few configurable parameters with certain defaults."}],"title":"Create a deployment","fragments":[{"text":"POST","kind":"text"}],"url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments\/post"},"doc://com.example.petstore/documentation/Swagger-Petstore---OpenAPI-3.0/_pet/post/422":{"required":true,"abstract":[{"type":"text","text":"Validation exception"}],"identifier":"doc:\/\/com.example.petstore\/documentation\/Swagger-Petstore---OpenAPI-3.0\/_pet\/post\/422","type":"topic","navigatorTitle":[{"text":"422 Response","kind":"text"}],"kind":"symbol","title":"422 Response","url":"\/documentation\/swagger-petstore---openapi-3.0\/_pet\/post\/422","role":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__deployments/post/409":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments\/post\/409","navigatorTitle":[{"text":"409 Response","kind":"text"}],"title":"409 Response","url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments\/post\/409","type":"topic","abstract":[{"text":"Referenced response","type":"text"}]},"https://docs.github.com/rest/commits/statuses":{"identifier":"https:\/\/docs.github.com\/rest\/commits\/statuses","title":"commit statuses","type":"link","titleInlineContent":[{"type":"text","text":"commit statuses"}],"url":"https:\/\/docs.github.com\/rest\/commits\/statuses"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__pulls/post/201":{"abstract":[{"text":"Referenced response","type":"text"}],"title":"201 Response","kind":"symbol","required":true,"role":"symbol","type":"topic","url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__pulls\/post\/201","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__pulls\/post\/201","navigatorTitle":[{"text":"201 Response","kind":"text"}]},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__deployments":{"identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments","url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments","kind":"symbol","type":"topic","role":"symbol","title":"\/repos\/{owner}\/{repo}\/deployments","navigatorTitle":[{"text":"\/repos\/{owner}\/{repo}\/deployments","kind":"text"}],"abstract":[]}}}