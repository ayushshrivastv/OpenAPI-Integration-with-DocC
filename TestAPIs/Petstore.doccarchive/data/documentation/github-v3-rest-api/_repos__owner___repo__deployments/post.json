{"sections":[],"abstract":[{"text":"Deployments offer a few configurable parameters with certain defaults.","type":"text"}],"topicSections":[{"generated":true,"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_orgs__org__personal-access-token-requests\/post\/202","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_orgs__org__personal-access-token-requests\/post\/422","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__check-suites__check_suite_id__rerequest\/post\/201","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__git_tags\/post\/409"]}],"primaryContentSections":[{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"ref","type":"codeVoice"},{"text":" parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them","type":"text"},{"text":" ","type":"text"},{"text":"before we merge a pull request.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"environment"},{"text":" parameter allows deployments to be issued to different runtime environments. Teams often have","type":"text"},{"text":" ","type":"text"},{"text":"multiple environments for verifying their applications, such as ","type":"text"},{"type":"codeVoice","code":"production"},{"text":", ","type":"text"},{"type":"codeVoice","code":"staging"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"qa"},{"text":". This parameter","type":"text"},{"text":" ","type":"text"},{"text":"makes it easier to track which environments have requested deployments. The default environment is ","type":"text"},{"type":"codeVoice","code":"production"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"auto_merge","type":"codeVoice"},{"text":" parameter is used to ensure that the requested ref is not behind the repository’s default branch. If","type":"text"},{"text":" ","type":"text"},{"text":"the ref ","type":"text"},{"inlineContent":[{"text":"is","type":"text"}],"type":"emphasis"},{"text":" behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,","type":"text"},{"text":" ","type":"text"},{"text":"the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will","type":"text"},{"text":" ","type":"text"},{"text":"return a failure response.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"By default, "},{"type":"reference","identifier":"https:\/\/docs.github.com\/rest\/commits\/statuses","isActive":true},{"type":"text","text":" for every submitted context must be in a "},{"type":"codeVoice","code":"success"},{"type":"text","text":" "},{"type":"text","text":"state. The "},{"type":"codeVoice","code":"required_contexts"},{"type":"text","text":" parameter allows you to specify a subset of contexts that must be "},{"type":"codeVoice","code":"success"},{"type":"text","text":", or to"},{"type":"text","text":" "},{"type":"text","text":"specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do"},{"type":"text","text":" "},{"type":"text","text":"not require any contexts or create any commit statuses, the deployment will always succeed."}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"payload"},{"text":" parameter is available for any extra information that a deployment system might need. It is a JSON text","type":"text"},{"text":" ","type":"text"},{"text":"field that will be passed on when a deployment event is dispatched.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"task"},{"text":" parameter is used by the deployment system to allow different execution paths. In the web world this might","type":"text"},{"text":" ","type":"text"},{"text":"be ","type":"text"},{"type":"codeVoice","code":"deploy:migrations"},{"text":" to run schema changes on the system. In the compiled world this could be a flag to compile an","type":"text"},{"text":" ","type":"text"},{"text":"application with debugging enabled.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Merged branch response:"}],"type":"paragraph"},{"inlineContent":[{"text":"You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating","type":"text"},{"text":" ","type":"text"},{"text":"a deployment. This auto-merge happens when:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Auto-merge option is enabled in the repository"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Topic branch does not include the latest changes on the base branch, which is "},{"type":"codeVoice","code":"master"},{"type":"text","text":" in the response example"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no merge conflicts"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"If there are no new commits in the base branch, a new request to create a deployment should give a successful","type":"text"},{"text":" ","type":"text"},{"text":"response.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Merge conflict response:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This error happens when the "},{"type":"codeVoice","code":"auto_merge"},{"type":"text","text":" option is enabled and when the default branch (in this case "},{"type":"codeVoice","code":"master"},{"type":"text","text":"), can’t"},{"type":"text","text":" "},{"type":"text","text":"be merged into the branch that’s being deployed (in this case "},{"type":"codeVoice","code":"topic-branch"},{"type":"text","text":"), due to merge conflicts."}],"type":"paragraph"},{"inlineContent":[{"text":"Failed commit status checks:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This error happens when the ","type":"text"},{"code":"required_contexts","type":"codeVoice"},{"text":" parameter indicates that one or more contexts need to have a ","type":"text"},{"code":"success","type":"codeVoice"},{"text":" ","type":"text"},{"text":"status for the commit to be deployed, but one or more of the required contexts do not have a state of ","type":"text"},{"code":"success","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"OAuth app tokens and personal access tokens (classic) need the ","type":"text"},{"code":"repo","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"repo_deployment","type":"codeVoice"},{"text":" scope to use this endpoint.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Parameters:"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"owner"},{"text":" (path, Required):","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"repo"},{"type":"text","text":" (path, Required):"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Request Body:","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"Content Type: "},{"code":"application\/json","type":"codeVoice"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Responses:"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"422","type":"codeVoice"},{"type":"text","text":": Referenced response"}]}]},{"content":[{"inlineContent":[{"code":"202","type":"codeVoice"},{"text":": Merged branch response","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"409"},{"type":"text","text":": Conflict when there is a merge conflict or the commit’s status checks failed"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"201"},{"type":"text","text":": Response"}]}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"openapi","url":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments\/post"},"metadata":{"title":"Create a deployment","modules":[{"name":"GitHub v3 REST API"}],"roleHeading":"HTTP POST","externalID":"operation:post:\/repos\/{owner}\/{repo}\/deployments","symbolKind":"method","fragments":[{"kind":"text","text":"POST"}],"role":"symbol","navigatorTitle":[{"text":"POST \/repos\/{owner}\/{repo}\/deployments","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"openapi"}],"paths":["\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments\/post"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API","doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments"]]},"references":{"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_orgs__org__personal-access-token-requests/post/202":{"identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_orgs__org__personal-access-token-requests\/post\/202","kind":"symbol","navigatorTitle":[{"kind":"text","text":"202 Response"}],"abstract":[{"type":"text","text":"Referenced response"}],"url":"\/documentation\/github-v3-rest-api\/_orgs__org__personal-access-token-requests\/post\/202","type":"topic","title":"202 Response","required":true,"role":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_orgs__org__personal-access-token-requests/post/422":{"title":"422 Response","navigatorTitle":[{"kind":"text","text":"422 Response"}],"abstract":[{"text":"Validation exception","type":"text"}],"type":"topic","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_orgs__org__personal-access-token-requests\/post\/422","required":true,"kind":"symbol","url":"\/documentation\/github-v3-rest-api\/_orgs__org__personal-access-token-requests\/post\/422","role":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__check-suites__check_suite_id__rerequest/post/201":{"title":"201 Response","navigatorTitle":[{"text":"201 Response","kind":"text"}],"abstract":[{"text":"Referenced response","type":"text"}],"type":"topic","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__check-suites__check_suite_id__rerequest\/post\/201","required":true,"url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__check-suites__check_suite_id__rerequest\/post\/201","kind":"symbol","role":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API":{"title":"GitHub v3 REST API","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API","role":"collection","url":"\/documentation\/github-v3-rest-api","type":"topic","abstract":[],"kind":"symbol"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__deployments":{"title":"\/repos\/{owner}\/{repo}\/deployments","kind":"symbol","navigatorTitle":[{"text":"\/repos\/{owner}\/{repo}\/deployments","kind":"text"}],"url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments","identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments","type":"topic","role":"symbol","abstract":[]},"https://docs.github.com/rest/commits/statuses":{"title":"commit statuses","identifier":"https:\/\/docs.github.com\/rest\/commits\/statuses","titleInlineContent":[{"type":"text","text":"commit statuses"}],"type":"link","url":"https:\/\/docs.github.com\/rest\/commits\/statuses"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__deployments/post":{"type":"topic","abstract":[{"text":"Deployments offer a few configurable parameters with certain defaults.","type":"text"}],"identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__deployments\/post","fragments":[{"text":"POST","kind":"text"}],"navigatorTitle":[{"text":"POST \/repos\/{owner}\/{repo}\/deployments","kind":"text"}],"role":"symbol","title":"Create a deployment","kind":"symbol","url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__deployments\/post"},"doc://com.example.petstore/documentation/GitHub-v3-REST-API/_repos__owner___repo__git_tags/post/409":{"navigatorTitle":[{"text":"409 Response","kind":"text"}],"identifier":"doc:\/\/com.example.petstore\/documentation\/GitHub-v3-REST-API\/_repos__owner___repo__git_tags\/post\/409","abstract":[{"text":"Referenced response","type":"text"}],"kind":"symbol","title":"409 Response","url":"\/documentation\/github-v3-rest-api\/_repos__owner___repo__git_tags\/post\/409","role":"symbol","type":"topic"}}}